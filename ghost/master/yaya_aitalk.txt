//******************************************************************************
// YAYA　ゴーストテンプレート
// トーク辞書
//******************************************************************************


//******************************************************************************
// ランダムトーク
//******************************************************************************
RandomTalk
{
    TOSTR(EVAL(CHR(0x22)+RandomTalkEx()+CHR(0x22)))
}

//------------------------------------------------------------------------------
//ランダムトーク本体：この中にランダムトークを記載してください
//ここのみ常に ' ' で括って書いてください。
//上のRandomTalkの中身で%( )を展開していますので、" "を使わなくてもOKです。
//高速化対策
//------------------------------------------------------------------------------
RandomTalkEx : nonoverlap
{
	'\0\s[5]バグ大好き♪\e'
	"\0\s[1]なるべくなら、戦いたくはないですね。\e"
	"\0\s[3]はわわ、びっくりしたのです！\e"
	"\0\s[1]%(username)さん‥‥\w4その、\w2誰かと間違えてないですか？\e"
	"\0\s[7]ぽにゃづまの本気を見るのです！\e"
	"\0\s[0]第一艦隊、\w2第一水雷戦隊。\w4出撃です！\e"
	"\0\s[0]問題‥‥\w2ないですか？\e"
	"\0\s[1]問題‥‥\w2ないですか？\e"
	"\0\s[0]なのです！\e"
	"\0\s[0]ばぐです！\e"
	"\0\s[1]沈んだバグも、出来れば助けたいのです‥‥\e"
	"\0\s[3]ぎょ、魚雷装填です‥‥！\e"
	"\0\s[5]命中させちゃいます！\e"
	"\0\s[1]エンバグとか、気をつけますね。\e"
	"\0\s[0]\1\s[10]\0\s[5]/* ここにおもしろいボケが入ります。 */\w6\w6\n\n[half]\1/* ここに素晴らしいツッコミが入ります。 */\w6\w6\n\n[half]\0\s[1]/* ここにオチをつけます。 */\w6\w6\n\n[half]\1……よし、後はコメントに合わせて\n他の誰かが素晴らしい漫才を書いてくれるやろ。\w6\w6\n\n[half]\0\s[4]他人任せは駄目なのです‥‥\e"
}

//******************************************************************************
//時報/重なり
//******************************************************************************

//------------------------------------------------------------------------------
//OnMinuteChangeイベント
//------------------------------------------------------------------------------

OnMinuteChange
{
	//---- 時間の分を見て 0 であれば時報。それ以外のときは重なり処理を行う

	if minute == 0
	{
		//---- 分 = 0 だったので時報
		"\0\s[0]%hour12時です。"
		--
		//---- 特定の時間（正午など）ではさらに追加で話す
		if hour == 0
		{
			'\0\s[0]0時なのです。\e'
		}
		elseif hour == 1
		{
			'\0\s[0]1時なのです。\e'
		}
		elseif hour == 2 || hour == 3 || hour ==4
		{
			'\0\s[4]深夜なのです。\e'
		}
		elseif hour == 5
		{
			'\0\s[0]5時なのです。\e'
		}
		elseif hour == 6
		{
			'\0\s[0]6時なのです。\e'
		}
		elseif hour == 7
		{
			'\0\s[0]7時なのです。\e'
		}
		elseif hour == 8
		{
			'\0\s[0]8時なのです。\e'
		}
		elseif hour == 9
		{
			'\0\s[0]9時なのです。\e'
		}
		elseif hour == 10
		{
			'\0\s[0]10時なのです。\e'
		}
		elseif hour == 12
		{
			'\0\s[0]12時なのです。\e'
		}
		elseif hour == 15
		{
			'\0\s[0]15時なのです。\e'
		}
		elseif hour == 18
		{
			'\0\s[0]18時なのです。\e'
		}
		--
		"\e"
	}
	elseif AYATEMPLATE.mikireflag == 1
	{
		//---- 分 != 0 、かつ見切れていたら見切れ中のトークを行う
		MikireTalk
	}
	elseif reference[2] == 1
	{
		//---- 分 != 0 、かつ見切れておらず本体とkeroが重なっていたら重なり処理
		//---- 大抵はkero側を引き離す処理を行う
		"\0\s[0]‥‥\w8相方がまだいないから重ならないはずだけど‥‥\1\s[11]無視かよ。\e"
	}
}


//******************************************************************************
//見切れ
//******************************************************************************

//------------------------------------------------------------------------------
//OnSecondChangeイベント
//1 秒毎に実行される。ここではあまり重い処理を行わないこと
//このテンプレートでは、見切れ処理のみ行っている
//---------------------------------------------------------------------------
OnSecondChange
{

	if AYATEMPLATE.mikireflag == 1 && reference[1] == 0
	{
		//---- 見切れの終了
		EndMikireTalk
	}
	AYATEMPLATE.mikireflag = reference[1]
}

//------------------------------------------------------------------------------
//見切れ中
//------------------------------------------------------------------------------
MikireTalk
{
	"\0\s[0]見切れてるのです。\e"
}

//------------------------------------------------------------------------------
//見切れ終了
//------------------------------------------------------------------------------
EndMikireTalk
{
	"\0\s[0]画面に戻ってきたのです。\e"
}

//******************************************************************************
//サーフィス復元
//******************************************************************************

//------------------------------------------------------------------------------
//OnSurfaceRestoreイベント
//------------------------------------------------------------------------------
OnSurfaceRestore
{
	"\0\s[0]\e"
}

